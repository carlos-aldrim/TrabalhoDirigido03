{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport * as type from \"../types/auth\";\nvar apiUrl = \"http://localhost:3333\";\nexport var login = function login(formLogin) {\n  return function () {\n    var _ref = _asyncToGenerator(function* (dispatch) {\n      dispatch({\n        type: type.LOGIN_REQUEST\n      });\n      try {\n        var data = fetch(apiUrl + \"/login\", {\n          method: \"GET\",\n          headers: {\n            Accept: \"application/json, text/plain, */*\",\n            \"Content-Type\": \"application/json;charset=UTF-8\"\n          }\n        });\n        console.log(data);\n        data.then(function (response) {\n          return response.json();\n        }).then(function (result) {\n          dispatch({\n            type: type.GET_USERS_SUCCESS,\n            payload: result\n          });\n          if (result.find(function (user) {\n            return user.email === formLogin.email;\n          }) == null) {\n            dispatch({\n              type: type.LOGIN_FAILED,\n              payload: \"Email não encontrado.\"\n            });\n          } else {\n            var user = result.find(function (user) {\n              return user.email === formLogin.email;\n            });\n            if (user.password === formLogin.password) {\n              dispatch({\n                type: type.LOGIN_SUCCESS,\n                payload: user\n              });\n            } else {\n              dispatch({\n                type: type.LOGIN_FAILED,\n                payload: \"Senha incorreta.\"\n              });\n            }\n          }\n        });\n      } catch (error) {\n        dispatch({\n          type: type.LOGIN_FAILED,\n          payload: \"Erro no login.\"\n        });\n      }\n    });\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\nexport var logout = function logout(formLogin) {\n  return function () {\n    var _ref2 = _asyncToGenerator(function* (dispatch) {\n      dispatch({\n        type: type.SET_LOGOUT\n      });\n    });\n    return function (_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n};\nexport var registerUser = function registerUser(values, navigation) {\n  return function () {\n    var _ref3 = _asyncToGenerator(function* (dispatch) {\n      dispatch({\n        type: type.CREATE_USER_REQUEST\n      });\n      try {\n        var response = yield fetch(apiUrl, {\n          method: \"POST\",\n          headers: {\n            Accept: \"application/json, text/plain, */*\",\n            \"content-type\": \"application/json; charset=utf-8\"\n          },\n          body: JSON.stringify(values)\n        });\n        var result = yield response.json();\n        dispatch({\n          type: type.CREATE_USER_SUCCESS,\n          payload: result\n        });\n        navigation.navigate(\"Login\");\n      } catch (error) {\n        dispatch({\n          type: type.CREATE_USER_FAILED,\n          payload: error\n        });\n      }\n    });\n    return function (_x3) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n};","map":{"version":3,"names":["type","apiUrl","login","formLogin","_ref","_asyncToGenerator","dispatch","LOGIN_REQUEST","data","fetch","method","headers","Accept","console","log","then","response","json","result","GET_USERS_SUCCESS","payload","find","user","email","LOGIN_FAILED","password","LOGIN_SUCCESS","error","_x","apply","arguments","logout","_ref2","SET_LOGOUT","_x2","registerUser","values","navigation","_ref3","CREATE_USER_REQUEST","body","JSON","stringify","CREATE_USER_SUCCESS","navigate","CREATE_USER_FAILED","_x3"],"sources":["C:/Mobile/TrabalhoDirigido03/Frontend/src/redux/actions/authAction.js"],"sourcesContent":["import * as type from \"../types/auth\";\r\n\r\nconst apiUrl = \"http://localhost:3333\";\r\n\r\nexport const login = (formLogin) => async (dispatch) => {\r\n  dispatch({\r\n    type: type.LOGIN_REQUEST,\r\n  });\r\n\r\n  try {\r\n    const data = fetch(apiUrl + \"/login\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        Accept: \"application/json, text/plain, */*\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n      //body: JSON.stringify(formData)\r\n    });\r\n\r\n    console.log(data)\r\n    data\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((result) => {\r\n        dispatch({\r\n          type: type.GET_USERS_SUCCESS,\r\n          payload: result,\r\n        });\r\n\r\n        if (result.find((user) => user.email === formLogin.email) == null) {\r\n          dispatch({\r\n            type: type.LOGIN_FAILED,\r\n            payload: \"Email não encontrado.\",\r\n          });\r\n        } else {\r\n          let user = result.find((user) => user.email === formLogin.email);\r\n          if (user.password === formLogin.password) {\r\n            dispatch({\r\n              type: type.LOGIN_SUCCESS,\r\n              payload: user,\r\n            });\r\n          } else {\r\n            dispatch({\r\n              type: type.LOGIN_FAILED,\r\n              payload: \"Senha incorreta.\",\r\n            });\r\n          }\r\n        }\r\n      });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: type.LOGIN_FAILED,\r\n      payload: \"Erro no login.\",\r\n    });\r\n  }\r\n};\r\n\r\nexport const logout = (formLogin) => async (dispatch) => {\r\n  dispatch({\r\n    type: type.SET_LOGOUT,\r\n  });\r\n};\r\n\r\nexport const registerUser = (values, navigation) => async (dispatch) => {\r\n  dispatch({\r\n    type: type.CREATE_USER_REQUEST,\r\n  });\r\n\r\n  try {\r\n    const response = await fetch(apiUrl, {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json, text/plain, */*\",\r\n        \"content-type\": \"application/json; charset=utf-8\",\r\n      },\r\n      body: JSON.stringify(values),\r\n    });\r\n    const result = await response.json();\r\n    dispatch({\r\n      type: type.CREATE_USER_SUCCESS,\r\n      payload: result,\r\n    });\r\n    navigation.navigate(\"Login\");\r\n  } catch (error) {\r\n    dispatch({\r\n      type: type.CREATE_USER_FAILED,\r\n      payload: error,\r\n    });\r\n  }\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}