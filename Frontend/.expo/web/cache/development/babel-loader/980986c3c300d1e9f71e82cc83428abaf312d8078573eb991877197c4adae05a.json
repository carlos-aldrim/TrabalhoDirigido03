{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { styles } from \"./EditTaskPage.style\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { updateTask } from \"../../../redux/actions/taskAction\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function EditTaskPage(_ref) {\n  var route = _ref.route;\n  var taskId = route.params.taskId;\n  var _useSelector = useSelector(function (state) {\n      return state.task;\n    }),\n    tasks = _useSelector.tasks;\n  var task = tasks.find(function (task) {\n    return task.id === taskId;\n  });\n  var _React$useState = React.useState(task.title),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    taskTitle = _React$useState2[0],\n    setTaskTitle = _React$useState2[1];\n  var _React$useState3 = React.useState(task.description),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    taskDescription = _React$useState4[0],\n    setTaskDescription = _React$useState4[1];\n  var dispatch = useDispatch();\n  var navigation = useNavigation();\n  var _React$useState5 = React.useState(false),\n    _React$useState6 = _slicedToArray(_React$useState5, 2),\n    titleError = _React$useState6[0],\n    setTitleError = _React$useState6[1];\n  var handleEditTask = function handleEditTask() {\n    if (!taskTitle) {\n      setTitleError(true);\n      return;\n    }\n  };\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsxs(View, {\n      children: [_jsx(Text, {\n        style: styles.title,\n        children: \"T\\xEDtulo:\"\n      }), _jsx(TextInput, {\n        style: titleError ? styles.inputError : styles.input,\n        placeholder: \"Digite o t\\xEDtulo...\",\n        value: taskTitle,\n        onChangeText: function onChangeText(text) {\n          setTaskTitle(text);\n          setTitleError(false);\n        }\n      }), _jsx(Text, {\n        style: styles.title,\n        children: \"Descri\\xE7\\xE3o:\"\n      }), _jsx(TextInput, {\n        style: styles.input,\n        placeholder: \"Digite a descri\\xE7\\xE3o...\",\n        value: taskDescription,\n        onChangeText: function onChangeText(text) {\n          return setTaskDescription(text);\n        }\n      }), _jsx(TouchableOpacity, {\n        style: styles.buttonContent,\n        onPress: handleEditTask,\n        children: _jsx(Text, {\n          style: styles.buttonText,\n          children: \"Alterar\"\n        })\n      })]\n    })\n  });\n}","map":{"version":3,"names":["React","View","TextInput","TouchableOpacity","Text","styles","useDispatch","useSelector","useNavigation","updateTask","jsx","_jsx","jsxs","_jsxs","EditTaskPage","_ref","route","taskId","params","_useSelector","state","task","tasks","find","id","_React$useState","useState","title","_React$useState2","_slicedToArray","taskTitle","setTaskTitle","_React$useState3","description","_React$useState4","taskDescription","setTaskDescription","dispatch","navigation","_React$useState5","_React$useState6","titleError","setTitleError","handleEditTask","style","container","children","inputError","input","placeholder","value","onChangeText","text","buttonContent","onPress","buttonText"],"sources":["C:/Mobile/TrabalhoDirigido03/Frontend/src/views/pages/EditTaskPage/EditTaskPage.js"],"sourcesContent":["import React from \"react\";\r\nimport { View, TextInput, TouchableOpacity, Text } from \"react-native\";\r\nimport { styles } from \"./EditTaskPage.style\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport { updateTask } from \"../../../redux/actions/taskAction\";\r\n\r\nexport default function EditTaskPage({ route }) {\r\n  const taskId = route.params.taskId;\r\n  const { tasks } = useSelector((state) => state.task);\r\n  const task = tasks.find((task) => task.id === taskId);\r\n  const [taskTitle, setTaskTitle] = React.useState(task.title);\r\n  const [taskDescription, setTaskDescription] = React.useState(\r\n    task.description\r\n  );\r\n  const dispatch = useDispatch();\r\n  const navigation = useNavigation();\r\n  const [titleError, setTitleError] = React.useState(false);\r\n\r\n  const handleEditTask = () => {\r\n    if (!taskTitle) {\r\n      setTitleError(true);\r\n      return;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View>\r\n        <Text style={styles.title}>Título:</Text>\r\n        <TextInput\r\n          style={titleError ? styles.inputError : styles.input}\r\n          placeholder=\"Digite o título...\"\r\n          value={taskTitle}\r\n          onChangeText={(text) => {\r\n            setTaskTitle(text);\r\n            setTitleError(false);\r\n          }}\r\n        />\r\n        <Text style={styles.title}>Descrição:</Text>\r\n        <TextInput\r\n          style={styles.input}\r\n          placeholder=\"Digite a descrição...\"\r\n          value={taskDescription}\r\n          onChangeText={(text) => setTaskDescription(text)}\r\n        />\r\n        <TouchableOpacity style={styles.buttonContent} onPress={handleEditTask}>\r\n          <Text style={styles.buttonText}>Alterar</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}