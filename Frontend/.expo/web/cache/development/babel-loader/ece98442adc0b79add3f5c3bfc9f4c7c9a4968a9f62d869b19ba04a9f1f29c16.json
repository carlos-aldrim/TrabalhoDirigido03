{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getTasks } from \"../../../redux/actions/taskAction\";\nimport { styles } from \"./TaskListPage.style\";\nimport { Ionicons, MaterialIcons } from \"@expo/vector-icons\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function TaskListPage() {\n  var dispatch = useDispatch();\n  var _useSelector = useSelector(function (state) {\n      return state.task;\n    }),\n    tasks = _useSelector.tasks;\n  var navigation = useNavigation();\n  React.useEffect(function () {\n    dispatch(getTasks());\n    console.log(tasks);\n  }, []);\n  var handleToggleTaskSelection = function handleToggleTaskSelection(taskId) {\n    var newTask = tasks.map(function (task) {\n      return task.id === action.payload ? _objectSpread(_objectSpread({}, task), {}, {\n        selected: !task.selected\n      }) : task;\n    });\n    dispatch(updateTask());\n  };\n  var handleMarkTasksAsCompleted = function handleMarkTasksAsCompleted() {};\n  var handleDeleteSelectedTasks = function handleDeleteSelectedTasks() {};\n  var navigateToDetails = function navigateToDetails(taskId) {};\n  var onItemPress = function onItemPress(taskId) {};\n  var renderItem = function renderItem(task) {\n    return _jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        return handleToggleTaskSelection(task.item.id);\n      },\n      onPressIn: function onPressIn() {\n        return onItemPress(task.item.id);\n      },\n      children: _jsx(Text, {\n        style: _objectSpread(_objectSpread({}, styles.taskIten), {}, {\n          textDecorationLine: task.item.completed ? \"line-through\" : \"none\",\n          color: task.item.completed ? \"gray\" : \"black\",\n          backgroundColor: task.item.selected ? \"lightgrey\" : \"transparent\"\n        }),\n        children: task.item.title\n      })\n    });\n  };\n  var onPressAddTaskScreen = function onPressAddTaskScreen() {\n    navigation.navigate(\"Adicionar tarefa\");\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(View, {\n      style: styles.taskToolsHeader,\n      children: _jsx(Text, {\n        style: styles.description,\n        children: \"Selecione as tarefas para executar a\\xE7\\xF5es.\"\n      })\n    }), _jsx(TouchableOpacity, {\n      style: _objectSpread(_objectSpread({}, styles.buttonFloatingContent), {}, {\n        backgroundColor: \"#097c7c\"\n      }),\n      onPress: onPressAddTaskScreen,\n      children: _jsx(Ionicons, {\n        name: \"add\",\n        size: 30,\n        color: \"white\"\n      })\n    }), _jsxs(View, {\n      style: styles.taskToolsHeader,\n      children: [_jsxs(TouchableOpacity, {\n        style: _objectSpread(_objectSpread({}, styles.buttonContent), {}, {\n          backgroundColor: \"#014e4e\"\n        }),\n        onPress: handleMarkTasksAsCompleted,\n        children: [_jsx(Ionicons, {\n          name: \"ios-checkmark-circle\",\n          size: 20,\n          color: \"#fff\"\n        }), _jsx(Text, {\n          style: styles.buttonText,\n          children: \"Concluir\"\n        })]\n      }), _jsxs(TouchableOpacity, {\n        style: _objectSpread(_objectSpread({}, styles.buttonContent), {}, {\n          backgroundColor: \"#4e0101\"\n        }),\n        onPress: handleDeleteSelectedTasks,\n        children: [_jsx(MaterialIcons, {\n          name: \"delete\",\n          size: 20,\n          color: \"#fff\"\n        }), _jsx(Text, {\n          style: styles.buttonText,\n          children: \"Deletar\"\n        })]\n      })]\n    }), _jsx(Text, {\n      style: styles.title,\n      children: \"Tarefa(s):\"\n    }), _jsx(Text, {\n      style: styles.description,\n      children: \"Duplo clique para acessar a tarefa.\"\n    }), _jsx(FlatList, {\n      data: tasks.filter(function (task) {\n        return !task.completed;\n      }),\n      renderItem: renderItem,\n      keyExtractor: function keyExtractor(item) {\n        return item.id;\n      }\n    }), _jsx(Text, {\n      style: styles.title,\n      children: \"Conclu\\xEDda(s):\"\n    }), _jsx(FlatList, {\n      data: tasks.filter(function (task) {\n        return task.completed;\n      }),\n      renderItem: renderItem,\n      keyExtractor: function keyExtractor(item) {\n        return item.id;\n      }\n    })]\n  });\n}","map":{"version":3,"names":["React","View","Text","TouchableOpacity","FlatList","useSelector","useDispatch","getTasks","styles","Ionicons","MaterialIcons","useNavigation","jsx","_jsx","jsxs","_jsxs","TaskListPage","dispatch","_useSelector","state","task","tasks","navigation","useEffect","console","log","handleToggleTaskSelection","taskId","newTask","map","id","action","payload","_objectSpread","selected","updateTask","handleMarkTasksAsCompleted","handleDeleteSelectedTasks","navigateToDetails","onItemPress","renderItem","onPress","item","onPressIn","children","style","taskIten","textDecorationLine","completed","color","backgroundColor","title","onPressAddTaskScreen","navigate","container","taskToolsHeader","description","buttonFloatingContent","name","size","buttonContent","buttonText","data","filter","keyExtractor"],"sources":["C:/Mobile/TrabalhoDirigido03/Frontend/src/views/pages/TaskListPage/TaskListPage.js"],"sourcesContent":["import React from \"react\";\r\nimport { View, Text, TouchableOpacity, FlatList } from \"react-native\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { getTasks } from \"../../../redux/actions/taskAction\";\r\nimport { styles } from \"./TaskListPage.style\";\r\nimport { Ionicons, MaterialIcons } from \"@expo/vector-icons\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\n\r\nexport default function TaskListPage() {\r\n  const dispatch = useDispatch();\r\n  const { tasks } = useSelector((state) => state.task);\r\n  const navigation = useNavigation();\r\n\r\n  React.useEffect(() => {\r\n    dispatch(getTasks());\r\n    console.log(tasks);\r\n  }, []);\r\n\r\n  const handleToggleTaskSelection = (taskId) => {\r\n    const newTask = tasks.map((task) => task.id === action.payload ? { ...task, selected: !task.selected } : task)\r\n    dispatch(updateTask());\r\n  };\r\n\r\n  const handleMarkTasksAsCompleted = () => {\r\n  };\r\n\r\n  const handleDeleteSelectedTasks = () => {\r\n  };\r\n\r\n  const navigateToDetails = (taskId) => {\r\n  };\r\n\r\n  const onItemPress = (taskId) => {\r\n  };\r\n\r\n  const renderItem = (task) => (\r\n    <TouchableOpacity\r\n      onPress={() => handleToggleTaskSelection(task.item.id)}\r\n      onPressIn={() => onItemPress(task.item.id)}\r\n    >\r\n      <Text\r\n        style={{\r\n          ...styles.taskIten,\r\n          textDecorationLine: task.item.completed ? \"line-through\" : \"none\",\r\n          color: task.item.completed ? \"gray\" : \"black\",\r\n          backgroundColor: task.item.selected ? \"lightgrey\" : \"transparent\",\r\n        }}\r\n      >\r\n        {task.item.title}\r\n      </Text>\r\n    </TouchableOpacity>\r\n  );\r\n\r\n  const onPressAddTaskScreen = () => {\r\n    navigation.navigate(\"Adicionar tarefa\");\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.taskToolsHeader}>\r\n        <Text style={styles.description}>\r\n          Selecione as tarefas para executar ações.\r\n        </Text>\r\n      </View>\r\n      <TouchableOpacity\r\n        style={{ ...styles.buttonFloatingContent, backgroundColor: \"#097c7c\" }}\r\n        onPress={onPressAddTaskScreen}\r\n      >\r\n        <Ionicons name=\"add\" size={30} color=\"white\" />\r\n      </TouchableOpacity>\r\n      <View style={styles.taskToolsHeader}>\r\n        <TouchableOpacity\r\n          style={{ ...styles.buttonContent, backgroundColor: \"#014e4e\" }}\r\n          onPress={handleMarkTasksAsCompleted}\r\n        >\r\n          <Ionicons name=\"ios-checkmark-circle\" size={20} color=\"#fff\" />\r\n          <Text style={styles.buttonText}>Concluir</Text>\r\n        </TouchableOpacity>\r\n        <TouchableOpacity\r\n          style={{ ...styles.buttonContent, backgroundColor: \"#4e0101\" }}\r\n          onPress={handleDeleteSelectedTasks}\r\n        >\r\n          <MaterialIcons name=\"delete\" size={20} color=\"#fff\" />\r\n          <Text style={styles.buttonText}>Deletar</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n      <Text style={styles.title}>Tarefa(s):</Text>\r\n      <Text style={styles.description}>\r\n        Duplo clique para acessar a tarefa.\r\n      </Text>\r\n      <FlatList\r\n        data={tasks.filter((task) => !task.completed)}\r\n        renderItem={renderItem}\r\n        keyExtractor={(item) => item.id}\r\n      />\r\n      <Text style={styles.title}>Concluída(s):</Text>\r\n      <FlatList\r\n        data={tasks.filter((task) => task.completed)}\r\n        renderItem={renderItem}\r\n        keyExtractor={(item) => item.id}\r\n      />\r\n    </View>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}