{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getTasks } from \"../../../redux/actions/taskAction\";\nimport { styles } from \"./TaskListPage.style\";\nimport { Ionicons, MaterialIcons } from \"@expo/vector-icons\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { updateTask, removeTask } from \"../../../redux/actions/taskAction\";\nimport { logout } from \"../../../redux/actions/authAction\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function TaskListPage() {\n  var dispatch = useDispatch();\n  var _useSelector = useSelector(function (state) {\n      return state.task;\n    }),\n    tasks = _useSelector.tasks;\n  var _useSelector2 = useSelector(function (state) {\n      return state.auth;\n    }),\n    user = _useSelector2.user;\n  var navigation = useNavigation();\n  var _React$useState = React.useState(0),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    lastPress = _React$useState2[0],\n    setLastPress = _React$useState2[1];\n  var _React$useState3 = React.useState(null),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    currentId = _React$useState4[0],\n    setCurrentId = _React$useState4[1];\n  var doublePressDelay = 300;\n  var _React$useState5 = React.useState([]),\n    _React$useState6 = _slicedToArray(_React$useState5, 2),\n    userTasks = _React$useState6[0],\n    setUserTasks = _React$useState6[1];\n  React.useEffect(function () {\n    dispatch(getTasks());\n    ;\n  }, [dispatch]);\n  React.useEffect(function () {\n    var newTasks = tasks.filter(function (task) {\n      return task.userId === user.id;\n    });\n    setUserTasks(newTasks);\n  }, [tasks, user]);\n  var handleToggleTaskSelection = function handleToggleTaskSelection(taskId) {\n    var selectedTask = tasks.find(function (task) {\n      return task.id === taskId;\n    });\n    if (selectedTask) {\n      var newTask = {\n        id: selectedTask.id,\n        title: selectedTask.title,\n        description: selectedTask.description,\n        selected: !selectedTask.selected,\n        completed: selectedTask.completed\n      };\n      dispatch(updateTask(newTask));\n    } else {\n      console.log(\"Tarefa nÃ£o encontrada\");\n    }\n  };\n  var handleMarkTasksAsCompleted = function handleMarkTasksAsCompleted() {\n    tasks.filter(function (task) {\n      return task.selected;\n    }).map(function (task) {\n      var newTask = {\n        id: task.id,\n        title: task.title,\n        description: task.description,\n        selected: false,\n        completed: true\n      };\n      dispatch(updateTask(newTask));\n    });\n  };\n  var handleDeleteSelectedTasks = function handleDeleteSelectedTasks() {\n    tasks.filter(function (task) {\n      return task.selected;\n    }).map(function (task) {\n      console.log(task);\n      dispatch(removeTask(task.id));\n    });\n  };\n  var navigateToDetails = function navigateToDetails(taskId) {\n    navigation.navigate(\"Detalhe da tarefa\", {\n      taskId: taskId\n    });\n  };\n  var onItemPress = function onItemPress(taskId) {\n    var time = new Date().getTime();\n    var delta = time - lastPress;\n    if (delta < doublePressDelay && taskId === currentId) {\n      navigateToDetails(taskId);\n    } else {\n      setLastPress(time);\n      setCurrentId(taskId);\n      setTimeout(function () {\n        setCurrentId(null);\n      }, doublePressDelay);\n    }\n    ;\n  };\n  var renderItem = function renderItem(task) {\n    return _jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        return handleToggleTaskSelection(task.item.id);\n      },\n      onPressIn: function onPressIn() {\n        return onItemPress(task.item.id);\n      },\n      children: _jsx(Text, {\n        style: _objectSpread(_objectSpread({}, styles.taskIten), {}, {\n          textDecorationLine: task.item.completed ? \"line-through\" : \"none\",\n          color: task.item.completed ? \"gray\" : \"black\",\n          backgroundColor: task.item.selected ? \"lightgrey\" : \"transparent\"\n        }),\n        children: task.item.title\n      })\n    });\n  };\n  var onPressAddTaskScreen = function onPressAddTaskScreen() {\n    navigation.navigate(\"Adicionar tarefa\");\n  };\n  var onPressLogoutUser = function onPressLogoutUser() {\n    dispatch(logout());\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(View, {\n      style: styles.taskToolsHeader,\n      children: _jsx(Text, {\n        style: styles.description,\n        children: \"Selecione as tarefas para executar a\\xE7\\xF5es.\"\n      })\n    }), _jsx(TouchableOpacity, {\n      style: _objectSpread(_objectSpread({}, styles.buttonFloatingContent), {}, {\n        backgroundColor: \"#097c7c\"\n      }),\n      onPress: onPressAddTaskScreen,\n      children: _jsx(Ionicons, {\n        name: \"add\",\n        size: 30,\n        color: \"white\"\n      })\n    }), _jsxs(View, {\n      style: styles.taskToolsHeader,\n      children: [_jsxs(TouchableOpacity, {\n        style: _objectSpread(_objectSpread(_objectSpread({}, styles.buttonContent), styles.buttonHeader), {}, {\n          backgroundColor: \"#014e4e\"\n        }),\n        onPress: handleMarkTasksAsCompleted,\n        children: [_jsx(Ionicons, {\n          name: \"ios-checkmark-circle\",\n          size: 20,\n          color: \"#fff\"\n        }), _jsx(Text, {\n          style: styles.buttonText,\n          children: \"Concluir\"\n        })]\n      }), _jsxs(TouchableOpacity, {\n        style: _objectSpread(_objectSpread(_objectSpread({}, styles.buttonContent), styles.buttonHeader), {}, {\n          backgroundColor: \"#4e0101\"\n        }),\n        onPress: handleDeleteSelectedTasks,\n        children: [_jsx(MaterialIcons, {\n          name: \"delete\",\n          size: 20,\n          color: \"#fff\"\n        }), _jsx(Text, {\n          style: styles.buttonText,\n          children: \"Deletar\"\n        })]\n      })]\n    }), _jsx(Text, {\n      style: styles.title,\n      children: \"Tarefa(s):\"\n    }), _jsx(Text, {\n      style: styles.description,\n      children: \"Duplo clique para acessar a tarefa.\"\n    }), _jsx(FlatList, {\n      data: userTasks.filter(function (task) {\n        return !task.completed;\n      }),\n      renderItem: renderItem,\n      keyExtractor: function keyExtractor(item) {\n        return item.id;\n      }\n    }), _jsx(Text, {\n      style: styles.title,\n      children: \"Conclu\\xEDda(s):\"\n    }), _jsx(FlatList, {\n      data: userTasks.filter(function (task) {\n        return task.completed;\n      }),\n      renderItem: renderItem,\n      keyExtractor: function keyExtractor(item) {\n        return item.id;\n      }\n    }), _jsxs(TouchableOpacity, {\n      style: _objectSpread(_objectSpread({}, styles.buttonContent), {}, {\n        backgroundColor: \"#4e0101\"\n      }),\n      onPress: onPressLogoutUser,\n      children: [_jsx(MaterialIcons, {\n        name: \"logout\",\n        size: 20,\n        color: \"#fff\"\n      }), _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Sair da conta\"\n      })]\n    })]\n  });\n}","map":{"version":3,"names":["React","View","Text","TouchableOpacity","FlatList","useSelector","useDispatch","getTasks","styles","Ionicons","MaterialIcons","useNavigation","updateTask","removeTask","logout","jsx","_jsx","jsxs","_jsxs","TaskListPage","dispatch","_useSelector","state","task","tasks","_useSelector2","auth","user","navigation","_React$useState","useState","_React$useState2","_slicedToArray","lastPress","setLastPress","_React$useState3","_React$useState4","currentId","setCurrentId","doublePressDelay","_React$useState5","_React$useState6","userTasks","setUserTasks","useEffect","newTasks","filter","userId","id","handleToggleTaskSelection","taskId","selectedTask","find","newTask","title","description","selected","completed","console","log","handleMarkTasksAsCompleted","map","handleDeleteSelectedTasks","navigateToDetails","navigate","onItemPress","time","Date","getTime","delta","setTimeout","renderItem","onPress","item","onPressIn","children","style","_objectSpread","taskIten","textDecorationLine","color","backgroundColor","onPressAddTaskScreen","onPressLogoutUser","container","taskToolsHeader","buttonFloatingContent","name","size","buttonContent","buttonHeader","buttonText","data","keyExtractor"],"sources":["C:/Mobile/TrabalhoDirigido03/Frontend/src/views/pages/TaskListPage/TaskListPage.js"],"sourcesContent":["import React from \"react\";\r\nimport { View, Text, TouchableOpacity, FlatList } from \"react-native\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { getTasks } from \"../../../redux/actions/taskAction\";\r\nimport { styles } from \"./TaskListPage.style\";\r\nimport { Ionicons, MaterialIcons } from \"@expo/vector-icons\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport { updateTask, removeTask } from \"../../../redux/actions/taskAction\";\r\nimport { logout } from \"../../../redux/actions/authAction\";\r\n\r\nexport default function TaskListPage() {\r\n  const dispatch = useDispatch();\r\n  const { tasks } = useSelector((state) => state.task);\r\n  const { user } = useSelector((state) => state.auth);\r\n  const navigation = useNavigation();\r\n  const [lastPress, setLastPress] = React.useState(0);\r\n  const [currentId, setCurrentId] = React.useState(null);\r\n  const doublePressDelay = 300;\r\n  const [userTasks, setUserTasks] = React.useState([]); \r\n\r\n  React.useEffect(() => {\r\n    dispatch(getTasks());;\r\n  }, [dispatch]);\r\n\r\n  React.useEffect(() => {\r\n    const newTasks = tasks.filter((task) => task.userId === user.id);\r\n    setUserTasks(newTasks);\r\n  }, [tasks, user]);\r\n\r\n  const handleToggleTaskSelection = (taskId) => {\r\n    const selectedTask = tasks.find((task) => task.id === taskId);\r\n    if (selectedTask) {\r\n      const newTask = {\r\n        id: selectedTask.id,\r\n        title: selectedTask.title,\r\n        description: selectedTask.description,\r\n        selected: !selectedTask.selected,\r\n        completed: selectedTask.completed,\r\n      };\r\n      dispatch(updateTask(newTask));\r\n    } else {\r\n      console.log(\"Tarefa nÃ£o encontrada\");\r\n    }\r\n  };\r\n\r\n  const handleMarkTasksAsCompleted = () => {\r\n    tasks.filter((task) => task.selected).map((task) => {\r\n      const newTask = {\r\n        id: task.id,\r\n        title: task.title,\r\n        description: task.description,\r\n        selected: false,\r\n        completed: true,\r\n      };\r\n      dispatch(updateTask(newTask));\r\n    });\r\n  };\r\n\r\n  const handleDeleteSelectedTasks = () => {\r\n    tasks.filter((task) => task.selected).map((task) => {\r\n      console.log(task);\r\n      dispatch(removeTask(task.id));\r\n    });\r\n  };\r\n\r\n  const navigateToDetails = (taskId) => {\r\n    navigation.navigate(\"Detalhe da tarefa\", { taskId });\r\n  };\r\n\r\n  const onItemPress = (taskId) => {\r\n    const time = new Date().getTime();\r\n    const delta = time - lastPress;\r\n\r\n    if (delta < doublePressDelay && taskId === currentId) {\r\n      navigateToDetails(taskId);\r\n    } else {\r\n      setLastPress(time);\r\n      setCurrentId(taskId);\r\n      setTimeout(() => {\r\n        setCurrentId(null);\r\n      }, doublePressDelay);\r\n    };\r\n  };\r\n\r\n  const renderItem = (task) => (\r\n    <TouchableOpacity\r\n      onPress={() => handleToggleTaskSelection(task.item.id)}\r\n      onPressIn={() => onItemPress(task.item.id)}\r\n    >\r\n      <Text\r\n        style={{\r\n          ...styles.taskIten,\r\n          textDecorationLine: task.item.completed ? \"line-through\" : \"none\",\r\n          color: task.item.completed ? \"gray\" : \"black\",\r\n          backgroundColor: task.item.selected ? \"lightgrey\" : \"transparent\",\r\n        }}\r\n      >\r\n        {task.item.title}\r\n      </Text>\r\n    </TouchableOpacity>\r\n  );\r\n\r\n  const onPressAddTaskScreen = () => {\r\n    navigation.navigate(\"Adicionar tarefa\");\r\n  };\r\n\r\n  const onPressLogoutUser = () => {\r\n    dispatch(logout());\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.taskToolsHeader}>\r\n        <Text style={styles.description}>\r\n          Selecione as tarefas para executar aÃ§Ãµes.\r\n        </Text>\r\n      </View>\r\n      <TouchableOpacity\r\n        style={{ ...styles.buttonFloatingContent, backgroundColor: \"#097c7c\" }}\r\n        onPress={onPressAddTaskScreen}\r\n      >\r\n        <Ionicons name=\"add\" size={30} color=\"white\" />\r\n      </TouchableOpacity>\r\n      <View style={styles.taskToolsHeader}>\r\n        <TouchableOpacity\r\n          style={{ ...styles.buttonContent, ...styles.buttonHeader, backgroundColor: \"#014e4e\" }}\r\n          onPress={handleMarkTasksAsCompleted}\r\n        >\r\n          <Ionicons name=\"ios-checkmark-circle\" size={20} color=\"#fff\" />\r\n          <Text style={styles.buttonText}>Concluir</Text>\r\n        </TouchableOpacity>\r\n        <TouchableOpacity\r\n          style={{ ...styles.buttonContent, ...styles.buttonHeader, backgroundColor: \"#4e0101\" }}\r\n          onPress={handleDeleteSelectedTasks}\r\n        >\r\n          <MaterialIcons name=\"delete\" size={20} color=\"#fff\" />\r\n          <Text style={styles.buttonText}>Deletar</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n      <Text style={styles.title}>Tarefa(s):</Text>\r\n      <Text style={styles.description}>\r\n        Duplo clique para acessar a tarefa.\r\n      </Text>\r\n      <FlatList\r\n        data={userTasks.filter((task) => !task.completed)}\r\n        renderItem={renderItem}\r\n        keyExtractor={(item) => item.id}\r\n      />\r\n      <Text style={styles.title}>ConcluÃ­da(s):</Text>\r\n      <FlatList\r\n        data={userTasks.filter((task) => task.completed)}\r\n        renderItem={renderItem}\r\n        keyExtractor={(item) => item.id}\r\n      />\r\n      <TouchableOpacity\r\n        style={{ ...styles.buttonContent, backgroundColor: \"#4e0101\" }}\r\n        onPress={onPressLogoutUser}\r\n      >\r\n        <MaterialIcons name=\"logout\" size={20} color=\"#fff\" />\r\n        <Text style={styles.buttonText}>\r\n          Sair da conta\r\n        </Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}