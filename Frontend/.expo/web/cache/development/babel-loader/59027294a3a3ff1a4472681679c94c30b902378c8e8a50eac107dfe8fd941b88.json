{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getTasks } from \"../../../redux/actions/taskAction\";\nimport { styles } from \"./TaskListPage.style\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function TaskListPage() {\n  var dispatch = useDispatch();\n  var _useSelector = useSelector(function (state) {\n      return state.task;\n    }),\n    tasks = _useSelector.tasks;\n  React.useEffect(function () {\n    dispatch(getTasks());\n  }, []);\n  var handleMarkTasksAsCompleted = function handleMarkTasksAsCompleted() {\n    var selectedTasks = tasks.filter(function (task) {\n      return task.selected;\n    }).map(function (task) {\n      return task.id;\n    });\n    dispatch(markTaskCompleted(selectedTasks));\n  };\n  var handleDeleteSelectedTasks = function handleDeleteSelectedTasks() {\n    dispatch(deleteSelectedTasks());\n  };\n  var navigateToDetails = function navigateToDetails(taskId) {\n    navigation.navigate(\"Detalhes da tarefa\", {\n      taskId: taskId\n    });\n  };\n  var onItemPress = function onItemPress(taskId) {};\n  var renderItem = function renderItem(_ref) {\n    var item = _ref.item;\n    return _jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        return handleToggleTaskSelection(item.id);\n      },\n      onPressIn: function onPressIn() {\n        return onItemPress(item.id);\n      },\n      children: _jsx(Text, {\n        style: _objectSpread(_objectSpread({}, styles.taskIten), {}, {\n          textDecorationLine: item.completed ? \"line-through\" : \"none\",\n          color: item.completed ? \"gray\" : \"black\",\n          backgroundColor: item.selected ? \"lightgrey\" : \"transparent\"\n        }),\n        children: item.title\n      })\n    });\n  };\n  var onPressAddTaskScreen = function onPressAddTaskScreen() {\n    navigation.navigate(\"Adicionar tarefa\");\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(View, {\n      style: styles.taskToolsHeader,\n      children: _jsx(Text, {\n        style: styles.description,\n        children: \"Selecione as tarefas para executar a\\xE7\\xF5es.\"\n      })\n    }), _jsx(TouchableOpacity, {\n      style: _objectSpread(_objectSpread({}, styles.buttonFloatingContent), {}, {\n        backgroundColor: \"#097c7c\"\n      }),\n      onPress: onPressAddTaskScreen,\n      children: _jsx(Ionicons, {\n        name: \"add\",\n        size: 30,\n        color: \"white\"\n      })\n    }), _jsxs(View, {\n      style: styles.taskToolsHeader,\n      children: [_jsxs(TouchableOpacity, {\n        style: _objectSpread(_objectSpread({}, styles.buttonContent), {}, {\n          backgroundColor: \"#014e4e\"\n        }),\n        onPress: handleMarkTasksAsCompleted,\n        children: [_jsx(Ionicons, {\n          name: \"ios-checkmark-circle\",\n          size: 20,\n          color: \"#fff\"\n        }), _jsx(Text, {\n          style: styles.buttonText,\n          children: \"Concluir\"\n        })]\n      }), _jsxs(TouchableOpacity, {\n        style: _objectSpread(_objectSpread({}, styles.buttonContent), {}, {\n          backgroundColor: \"#4e0101\"\n        }),\n        onPress: handleDeleteSelectedTasks,\n        children: [_jsx(MaterialIcons, {\n          name: \"delete\",\n          size: 20,\n          color: \"#fff\"\n        }), _jsx(Text, {\n          style: styles.buttonText,\n          children: \"Deletar\"\n        })]\n      })]\n    }), _jsx(Text, {\n      style: styles.title,\n      children: \"Tarefa(s):\"\n    }), _jsx(Text, {\n      style: styles.description,\n      children: \"Duplo clique para acessar a tarefa.\"\n    }), _jsx(FlatList, {\n      data: tasks.filter(function (task) {\n        return !task.completed;\n      }),\n      renderItem: renderItem,\n      keyExtractor: function keyExtractor(item) {\n        return item.id.toString();\n      }\n    }), _jsx(Text, {\n      style: styles.title,\n      children: \"Conclu\\xEDda(s):\"\n    }), _jsx(FlatList, {\n      data: tasks.filter(function (task) {\n        return task.completed;\n      }),\n      renderItem: renderItem,\n      keyExtractor: function keyExtractor(item) {\n        return item.id.toString();\n      }\n    })]\n  });\n}","map":{"version":3,"names":["React","View","Text","TouchableOpacity","useSelector","useDispatch","getTasks","styles","jsx","_jsx","jsxs","_jsxs","TaskListPage","dispatch","_useSelector","state","task","tasks","useEffect","handleMarkTasksAsCompleted","selectedTasks","filter","selected","map","id","markTaskCompleted","handleDeleteSelectedTasks","deleteSelectedTasks","navigateToDetails","taskId","navigation","navigate","onItemPress","renderItem","_ref","item","onPress","handleToggleTaskSelection","onPressIn","children","style","_objectSpread","taskIten","textDecorationLine","completed","color","backgroundColor","title","onPressAddTaskScreen","container","taskToolsHeader","description","buttonFloatingContent","Ionicons","name","size","buttonContent","buttonText","MaterialIcons","FlatList","data","keyExtractor","toString"],"sources":["C:/Mobile/TrabalhoDirigido03/Frontend/src/views/pages/TaskListPage/TaskListPage.js"],"sourcesContent":["import React from \"react\";\r\nimport { View, Text, TouchableOpacity } from \"react-native\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { getTasks } from \"../../../redux/actions/taskAction\";\r\nimport { styles } from \"./TaskListPage.style\";\r\n\r\nexport default function TaskListPage() {\r\n  const dispatch = useDispatch();\r\n  const { tasks } = useSelector((state) => state.task);\r\n\r\n  React.useEffect(() => {\r\n    dispatch(getTasks());\r\n  }, []);\r\n\r\n  const handleMarkTasksAsCompleted = () => {\r\n    const selectedTasks = tasks\r\n      .filter((task) => task.selected)\r\n      .map((task) => task.id);\r\n    dispatch(markTaskCompleted(selectedTasks));\r\n  };\r\n\r\n  const handleDeleteSelectedTasks = () => {\r\n    dispatch(deleteSelectedTasks());\r\n  };\r\n\r\n  const navigateToDetails = (taskId: number) => {\r\n    navigation.navigate(\"Detalhes da tarefa\", { taskId });\r\n  };\r\n\r\n  const onItemPress = (taskId: number) => {\r\n  };\r\n\r\n  const renderItem = ({ item }: { item: Task }) => (\r\n    <TouchableOpacity\r\n      onPress={() => handleToggleTaskSelection(item.id)}\r\n      onPressIn={() => onItemPress(item.id)}\r\n    >\r\n      <Text\r\n        style={{\r\n          ...styles.taskIten,\r\n          textDecorationLine: item.completed ? \"line-through\" : \"none\",\r\n          color: item.completed ? \"gray\" : \"black\",\r\n          backgroundColor: item.selected ? \"lightgrey\" : \"transparent\",\r\n        }}\r\n      >\r\n        {item.title}\r\n      </Text>\r\n    </TouchableOpacity>\r\n  );\r\n\r\n  const onPressAddTaskScreen = () => {\r\n    navigation.navigate(\"Adicionar tarefa\");\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.taskToolsHeader}>\r\n        <Text style={styles.description}>\r\n          Selecione as tarefas para executar ações.\r\n        </Text>\r\n      </View>\r\n      <TouchableOpacity\r\n        style={{ ...styles.buttonFloatingContent, backgroundColor: \"#097c7c\" }}\r\n        onPress={onPressAddTaskScreen}\r\n      >\r\n        <Ionicons name=\"add\" size={30} color=\"white\" />\r\n      </TouchableOpacity>\r\n      <View style={styles.taskToolsHeader}>\r\n        <TouchableOpacity\r\n          style={{ ...styles.buttonContent, backgroundColor: \"#014e4e\" }}\r\n          onPress={handleMarkTasksAsCompleted}\r\n        >\r\n          <Ionicons name=\"ios-checkmark-circle\" size={20} color=\"#fff\" />\r\n          <Text style={styles.buttonText}>Concluir</Text>\r\n        </TouchableOpacity>\r\n        <TouchableOpacity\r\n          style={{ ...styles.buttonContent, backgroundColor: \"#4e0101\" }}\r\n          onPress={handleDeleteSelectedTasks}\r\n        >\r\n          <MaterialIcons name=\"delete\" size={20} color=\"#fff\" />\r\n          <Text style={styles.buttonText}>Deletar</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n      <Text style={styles.title}>Tarefa(s):</Text>\r\n      <Text style={styles.description}>\r\n        Duplo clique para acessar a tarefa.\r\n      </Text>\r\n      <FlatList\r\n        data={tasks.filter((task) => !task.completed)}\r\n        renderItem={renderItem}\r\n        keyExtractor={(item) => item.id.toString()}\r\n      />\r\n      <Text style={styles.title}>Concluída(s):</Text>\r\n      <FlatList\r\n        data={tasks.filter((task) => task.completed)}\r\n        renderItem={renderItem}\r\n        keyExtractor={(item) => item.id.toString()}\r\n      />\r\n    </View>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}