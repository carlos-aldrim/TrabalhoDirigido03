{"ast":null,"code":"import React from \"react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport TaskListPage from \"../views/pages/TaskListPage/TaskListPage\";\nimport AddTaskPage from \"../views/pages/AddTaskPage/AddTaskPage\";\nimport DetailsTaskPage from \"../views/pages/DetailsTaskPage/DetailsTaskPage\";\nimport EditTaskPage from \"../views/pages/EditTaskPage/EditTaskPage\";\nimport LoginUserPage from \"../views/pages/LoginUserPage/LoginUserPage\";\nimport { useSelector } from \"react-redux\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar AuthStack = createStackNavigator();\nvar TaskStack = createStackNavigator();\nvar Stack = createStackNavigator();\nfunction TaskStackNavigator() {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(TaskStack.Navigator, {\n      initialRouteName: \"Lista de tarefas\",\n      children: [_jsx(TaskStack.Screen, {\n        name: \"Lista de tarefas\",\n        component: TaskListPage\n      }), _jsx(TaskStack.Screen, {\n        name: \"Adicionar tarefa\",\n        component: AddTaskPage\n      }), _jsx(TaskStack.Screen, {\n        name: \"Detalhe da tarefa\",\n        component: DetailsTaskPage\n      }), _jsx(TaskStack.Screen, {\n        name: \"Editar tarefa\",\n        component: EditTaskPage\n      })]\n    })\n  });\n}\nfunction AuthStackNavigator() {\n  return _jsx(NavigationContainer, {\n    children: _jsx(AuthStack.Navigator, {\n      mode: \"modal\",\n      initialRouteName: \"Login\",\n      children: _jsx(AuthStack.Screen, {\n        name: \"Login\",\n        component: LoginUserPage\n      })\n    })\n  });\n}\nexport default function Router() {\n  var _useSelector = useSelector(function (state) {\n      return state.auth;\n    }),\n    isLogin = _useSelector.isLogin;\n  console.log(isLoading);\n  function renderScreens() {\n    return isLogin ? _jsx(RootStack.Screen, {\n      name: \"TaskStack\",\n      component: TaskStackNavigator\n    }) : _jsx(RootStack.Screen, {\n      name: \"AuthStack\",\n      component: AuthStackNavigator\n    });\n  }\n  return _jsx(NavigationContainer, {\n    children: _jsx(Stack.Navigator, {\n      screenOptions: {\n        headerShown: false,\n        animationEnabled: false\n      },\n      children: renderScreens()\n    })\n  });\n}","map":{"version":3,"names":["React","NavigationContainer","createStackNavigator","TaskListPage","AddTaskPage","DetailsTaskPage","EditTaskPage","LoginUserPage","useSelector","jsx","_jsx","jsxs","_jsxs","AuthStack","TaskStack","Stack","TaskStackNavigator","children","Navigator","initialRouteName","Screen","name","component","AuthStackNavigator","mode","Router","_useSelector","state","auth","isLogin","console","log","isLoading","renderScreens","RootStack","screenOptions","headerShown","animationEnabled"],"sources":["C:/Mobile/TrabalhoDirigido03/Frontend/src/components/Router.js"],"sourcesContent":["import React from \"react\";\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport { createStackNavigator } from \"@react-navigation/stack\";\r\nimport TaskListPage from \"../views/pages/TaskListPage/TaskListPage\";\r\nimport AddTaskPage from \"../views/pages/AddTaskPage/AddTaskPage\";\r\nimport DetailsTaskPage from \"../views/pages/DetailsTaskPage/DetailsTaskPage\";\r\nimport EditTaskPage from \"../views/pages/EditTaskPage/EditTaskPage\";\r\nimport LoginUserPage from \"../views/pages/LoginUserPage/LoginUserPage\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst AuthStack = createStackNavigator();\r\nconst TaskStack = createStackNavigator();\r\nconst Stack = createStackNavigator();\r\n\r\nfunction TaskStackNavigator() {\r\n  return (\r\n    <NavigationContainer>\r\n      <TaskStack.Navigator initialRouteName=\"Lista de tarefas\">\r\n        <TaskStack.Screen name=\"Lista de tarefas\" component={TaskListPage} />\r\n        <TaskStack.Screen name=\"Adicionar tarefa\" component={AddTaskPage} />\r\n        <TaskStack.Screen name=\"Detalhe da tarefa\" component={DetailsTaskPage} />\r\n        <TaskStack.Screen name=\"Editar tarefa\" component={EditTaskPage} />\r\n      </TaskStack.Navigator>\r\n    </NavigationContainer>\r\n  );\r\n}\r\n\r\nfunction AuthStackNavigator() {\r\n  return (\r\n    <NavigationContainer>\r\n      <AuthStack.Navigator mode=\"modal\" initialRouteName=\"Login\">\r\n        <AuthStack.Screen name=\"Login\" component={LoginUserPage} />\r\n      </AuthStack.Navigator>\r\n    </NavigationContainer>\r\n  );\r\n}\r\n\r\nexport default function Router() {\r\n  const { isLogin } = useSelector((state) => state.auth);\r\n\r\n  console.log(isLoading)\r\n\r\n  function renderScreens() {\r\n    return (\r\n      (isLogin) ?\r\n        <RootStack.Screen name={\"TaskStack\"} component={TaskStackNavigator} />\r\n      :\r\n        <RootStack.Screen name={\"AuthStack\"} component={AuthStackNavigator} />\r\n    )\r\n  }\r\n\r\n  return (\r\n    <NavigationContainer>\r\n      <Stack.Navigator screenOptions={{\r\n        headerShown: false,\r\n        animationEnabled: false,\r\n      }}>\r\n        {renderScreens()}\r\n      </Stack.Navigator>\r\n    </NavigationContainer>\r\n  );\r\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,oBAAoB,QAAQ,yBAAyB;AAC9D,OAAOC,YAAY;AACnB,OAAOC,WAAW;AAClB,OAAOC,eAAe;AACtB,OAAOC,YAAY;AACnB,OAAOC,aAAa;AACpB,SAASC,WAAW,QAAQ,aAAa;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAE1C,IAAMC,SAAS,GAAGX,oBAAoB,CAAC,CAAC;AACxC,IAAMY,SAAS,GAAGZ,oBAAoB,CAAC,CAAC;AACxC,IAAMa,KAAK,GAAGb,oBAAoB,CAAC,CAAC;AAEpC,SAASc,kBAAkBA,CAAA,EAAG;EAC5B,OACEN,IAAA,CAACT,mBAAmB;IAAAgB,QAAA,EAClBL,KAAA,CAACE,SAAS,CAACI,SAAS;MAACC,gBAAgB,EAAC,kBAAkB;MAAAF,QAAA,GACtDP,IAAA,CAACI,SAAS,CAACM,MAAM;QAACC,IAAI,EAAC,kBAAkB;QAACC,SAAS,EAAEnB;MAAa,CAAE,CAAC,EACrEO,IAAA,CAACI,SAAS,CAACM,MAAM;QAACC,IAAI,EAAC,kBAAkB;QAACC,SAAS,EAAElB;MAAY,CAAE,CAAC,EACpEM,IAAA,CAACI,SAAS,CAACM,MAAM;QAACC,IAAI,EAAC,mBAAmB;QAACC,SAAS,EAAEjB;MAAgB,CAAE,CAAC,EACzEK,IAAA,CAACI,SAAS,CAACM,MAAM;QAACC,IAAI,EAAC,eAAe;QAACC,SAAS,EAAEhB;MAAa,CAAE,CAAC;IAAA,CAC/C;EAAC,CACH,CAAC;AAE1B;AAEA,SAASiB,kBAAkBA,CAAA,EAAG;EAC5B,OACEb,IAAA,CAACT,mBAAmB;IAAAgB,QAAA,EAClBP,IAAA,CAACG,SAAS,CAACK,SAAS;MAACM,IAAI,EAAC,OAAO;MAACL,gBAAgB,EAAC,OAAO;MAAAF,QAAA,EACxDP,IAAA,CAACG,SAAS,CAACO,MAAM;QAACC,IAAI,EAAC,OAAO;QAACC,SAAS,EAAEf;MAAc,CAAE;IAAC,CACxC;EAAC,CACH,CAAC;AAE1B;AAEA,eAAe,SAASkB,MAAMA,CAAA,EAAG;EAC/B,IAAAC,YAAA,GAAoBlB,WAAW,CAAC,UAACmB,KAAK;MAAA,OAAKA,KAAK,CAACC,IAAI;IAAA,EAAC;IAA9CC,OAAO,GAAAH,YAAA,CAAPG,OAAO;EAEfC,OAAO,CAACC,GAAG,CAACC,SAAS,CAAC;EAEtB,SAASC,aAAaA,CAAA,EAAG;IACvB,OACGJ,OAAO,GACNnB,IAAA,CAACwB,SAAS,CAACd,MAAM;MAACC,IAAI,EAAE,WAAY;MAACC,SAAS,EAAEN;IAAmB,CAAE,CAAC,GAEtEN,IAAA,CAACwB,SAAS,CAACd,MAAM;MAACC,IAAI,EAAE,WAAY;MAACC,SAAS,EAAEC;IAAmB,CAAE,CAAC;EAE5E;EAEA,OACEb,IAAA,CAACT,mBAAmB;IAAAgB,QAAA,EAClBP,IAAA,CAACK,KAAK,CAACG,SAAS;MAACiB,aAAa,EAAE;QAC9BC,WAAW,EAAE,KAAK;QAClBC,gBAAgB,EAAE;MACpB,CAAE;MAAApB,QAAA,EACCgB,aAAa,CAAC;IAAC,CACD;EAAC,CACC,CAAC;AAE1B"},"metadata":{},"sourceType":"module","externalDependencies":[]}