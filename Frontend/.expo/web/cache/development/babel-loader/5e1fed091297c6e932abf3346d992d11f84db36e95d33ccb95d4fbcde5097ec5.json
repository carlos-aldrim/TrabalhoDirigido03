{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getTasks } from \"../../../redux/actions/taskAction\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function TaskListPage() {\n  var dispatch = useDispatch();\n  var _useSelector = useSelector(function (state) {\n      return state.task;\n    }),\n    tasks = _useSelector.tasks;\n  React.useEffect(function () {\n    dispatch(getTasks());\n  }, []);\n  return _jsxs(View, {\n    children: [_jsx(View, {\n      style: styles.taskToolsHeader,\n      children: _jsx(Text, {\n        style: styles.description,\n        children: \"Selecione as tarefas para executar a\\xE7\\xF5es.\"\n      })\n    }), _jsx(TouchableOpacity, {\n      style: _objectSpread(_objectSpread({}, styles.buttonFloatingContent), {}, {\n        backgroundColor: \"#097c7c\"\n      }),\n      onPress: onPressAddTaskScreen,\n      children: _jsx(Ionicons, {\n        name: \"add\",\n        size: 30,\n        color: \"white\"\n      })\n    }), _jsxs(View, {\n      style: styles.taskToolsHeader,\n      children: [_jsxs(TouchableOpacity, {\n        style: _objectSpread(_objectSpread({}, styles.buttonContent), {}, {\n          backgroundColor: \"#014e4e\"\n        }),\n        onPress: handleMarkTasksAsCompleted,\n        children: [_jsx(Ionicons, {\n          name: \"ios-checkmark-circle\",\n          size: 20,\n          color: \"#fff\"\n        }), _jsx(Text, {\n          style: styles.buttonText,\n          children: \"Concluir\"\n        })]\n      }), _jsxs(TouchableOpacity, {\n        style: _objectSpread(_objectSpread({}, styles.buttonContent), {}, {\n          backgroundColor: \"#4e0101\"\n        }),\n        onPress: handleDeleteSelectedTasks,\n        children: [_jsx(MaterialIcons, {\n          name: \"delete\",\n          size: 20,\n          color: \"#fff\"\n        }), _jsx(Text, {\n          style: styles.buttonText,\n          children: \"Deletar\"\n        })]\n      })]\n    }), _jsx(Text, {\n      style: styles.title,\n      children: \"Tarefa(s):\"\n    }), _jsx(Text, {\n      style: styles.description,\n      children: \"Duplo clique para acessar a tarefa.\"\n    }), _jsx(FlatList, {\n      data: tasks.filter(function (task) {\n        return !task.completed;\n      }),\n      renderItem: renderItem,\n      keyExtractor: function keyExtractor(item) {\n        return item.id.toString();\n      }\n    }), _jsx(Text, {\n      style: styles.title,\n      children: \"Conclu\\xEDda(s):\"\n    }), _jsx(FlatList, {\n      data: tasks.filter(function (task) {\n        return task.completed;\n      }),\n      renderItem: renderItem,\n      keyExtractor: function keyExtractor(item) {\n        return item.id.toString();\n      }\n    })]\n  });\n}","map":{"version":3,"names":["React","View","Text","useSelector","useDispatch","getTasks","jsx","_jsx","jsxs","_jsxs","TaskListPage","dispatch","_useSelector","state","task","tasks","useEffect","children","style","styles","taskToolsHeader","description","TouchableOpacity","_objectSpread","buttonFloatingContent","backgroundColor","onPress","onPressAddTaskScreen","Ionicons","name","size","color","buttonContent","handleMarkTasksAsCompleted","buttonText","handleDeleteSelectedTasks","MaterialIcons","title","FlatList","data","filter","completed","renderItem","keyExtractor","item","id","toString"],"sources":["C:/Mobile/TrabalhoDirigido03/Frontend/src/views/pages/TaskListPage/TaskListPage.js"],"sourcesContent":["import React from \"react\";\r\nimport { View, Text } from \"react-native\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { getTasks } from \"../../../redux/actions/taskAction\";\r\n\r\nexport default function TaskListPage() {\r\n  const dispatch = useDispatch();\r\n  const { tasks } = useSelector((state) => state.task);\r\n\r\n  React.useEffect(() => {\r\n    dispatch(getTasks());\r\n  }, []);\r\n\r\n  return (\r\n    <View>\r\n      <View style={styles.taskToolsHeader}>\r\n        <Text style={styles.description}>Selecione as tarefas para executar ações.</Text>\r\n      </View>\r\n      <TouchableOpacity\r\n        style={{ ...styles.buttonFloatingContent, backgroundColor: \"#097c7c\" }}\r\n        onPress={onPressAddTaskScreen}\r\n      >\r\n        <Ionicons name=\"add\" size={30} color=\"white\" />\r\n      </TouchableOpacity>\r\n      <View style={styles.taskToolsHeader}>\r\n        <TouchableOpacity\r\n          style={{ ...styles.buttonContent, backgroundColor: \"#014e4e\" }}\r\n          onPress={handleMarkTasksAsCompleted}\r\n        >\r\n          <Ionicons name=\"ios-checkmark-circle\" size={20} color=\"#fff\" />\r\n          <Text style={styles.buttonText}>Concluir</Text>\r\n        </TouchableOpacity>\r\n        <TouchableOpacity\r\n          style={{ ...styles.buttonContent, backgroundColor: \"#4e0101\" }}\r\n          onPress={handleDeleteSelectedTasks}\r\n        >\r\n          <MaterialIcons name=\"delete\" size={20} color=\"#fff\" />\r\n          <Text style={styles.buttonText}>Deletar</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n      <Text style={styles.title}>Tarefa(s):</Text>\r\n      <Text style={styles.description}>Duplo clique para acessar a tarefa.</Text>\r\n      <FlatList\r\n        data={tasks.filter((task) => !task.completed)}\r\n        renderItem={renderItem}\r\n        keyExtractor={(item) => item.id.toString()}\r\n      />\r\n      <Text style={styles.title}>Concluída(s):</Text>\r\n      <FlatList\r\n        data={tasks.filter((task) => task.completed)}\r\n        renderItem={renderItem}\r\n        keyExtractor={(item) => item.id.toString()}\r\n      />\r\n    </View>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}